<!-- https://react.dev/learn/reacting-to-input-with-state#profile-editor -->
<!DOCTYPE html>
<html>
  <head>
    <script src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>
    <link rel="stylesheet" href="../styles.css" />
    <style>
      label {
        display: block;
        margin-bottom: 20px;
      }
    </style>
    <title>Profile editor</title>
  </head>
  <body>
    <div id="root"></div>

    <script type="text/babel">
      /*
       * ======================================================================
       * Components.js
       */
      function ProfileEditor({ editing = false, profile }) {
        const [edit, setEdit] = React.useState(editing);
        const [data, setData] = React.useState(profile);
        const [note, setNote] = React.useState("");

        /**
         * Shared edit input handler.
         */
        function handleEdit(e) {
          setData({ ...data, [e.target.name]: e.target.value });
        }

        /**
         * Pass additional args to event handler.
         * @link https://stackoverflow.com/questions/50350202/when-to-use-inline-function-on-button-onclick-event-javascript-react-js
         *
         * CAUTION:
         * Anonymouse event handlers are (re)created by JS engine on each React render!
         */
        function handleEditArgs(arg1, arg2, e) {
          setData({ ...data, [arg1]: `${e.target.value}[${arg2}]` });
        }

        return (
          <form>
            <label>
              First name:
              {edit ? (
                <input name="first" value={data.first} onChange={handleEdit} />
              ) : (
                <b>{data.first}</b>
              )}
            </label>
            <label>
              Last name:
              {edit ? (
                <input
                  name="last"
                  value={data.last}
                  onChange={handleEditArgs.bind(this, "last", "Arg-2")}
                />
              ) : (
                <b>{data.last}</b>
              )}
            </label>
            <label>
              Notes:
              {edit ? (
                <input
                  name="note"
                  value={note}
                  onChange={(e) => setNote(e.target.value)}
                />
              ) : (
                <b>{note}</b>
              )}
            </label>
            <button
              type="submit"
              onClick={(e) => {
                e.preventDefault();
                setEdit(!edit);
              }}
            >
              {edit ? "Save" : "Edit"} Profile
            </button>
            <p>
              <i>
                Hello, {data.first} {data.last}!
              </i>
            </p>
          </form>
        );
      }

      /*
       * ======================================================================
       * App.js
       */
      function App() {
        return (
          <ProfileEditor
            editing={true}
            profile={{ first: "Jane", last: "Jacobs" }}
          />
        );
      }

      /*
       * ======================================================================
       * index.js
       */
      ReactDOM.createRoot(document.getElementById("root")).render(
        <React.StrictMode>
          <App />
        </React.StrictMode>
      );
    </script>
  </body>
</html>
